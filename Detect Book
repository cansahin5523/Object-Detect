import cv2
import numpy as np
import os

path = 'Scripts/ImagesQuaery'
orb = cv2.ORB_create(nfeatures=1000)
images = []
classnames = []

myList = os.listdir(path)
print("toplam resim adedi : ", len(myList))

for cl in myList:
    imgCur = cv2.imread(f'{path}/{cl}',0)
    images.append(imgCur)
    classnames.append(os.path.splitext(cl)[0])
print(classnames)


def findDes(images):
    desList = []
    for img in images:
        kp,des = orb.detectAndCompute(img,None)
        desList.append(des)
    return desList

def findID(img,desList,thres=15):
    kp2, des2 = orb.detectAndCompute(img,None)
    bf = cv2.BFMatcher()
    matchList = []
    finalValue = -1
    try:
        for des in desList:
            matches = bf.knnMatch(des, des2, k=2)
            good = []

            for m, n in matches:
                if m.distance < 0.75 * n.distance:
                    good.append([m])
            matchList.append(len(good))
    except:
        pass
    #print(matchList)
    if len(matchList) != 0:
        if max(matchList) > thres:
            finalValue = matchList.index(max(matchList))

    return  finalValue

desList = findDes(images)
print(len(desList))

cap = cv2.VideoCapture(0)

while True:
    _, img2 = cap.read()
    imageOriginal = img2.copy()
    img2 = cv2.cvtColor(img2,cv2.COLOR_BGR2GRAY)

    id = findID(img2,desList)
    if id != -1:
        cv2.putText(imageOriginal,classnames[id],(50,50),cv2.FONT_HERSHEY_COMPLEX,1,(255,0,0),1)

    cv2.imshow("img2",imageOriginal)
    k = cv2.waitKey(1) & 0xFF
    if k == 27:
        break


